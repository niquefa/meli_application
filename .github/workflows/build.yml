name: Build, pack and ship

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make artifact directory
        run: mkdir -p ./artifacts/python_explorations

      - name: Upgrade pip
        run: pip install --upgrade pip

#      - name: Update system
#        run: apt-get update

      - name: Update Build essential
        run: apt-get install build-essential libssl-dev libffi-dev python-dev libjpeg-dev zlib1g-dev -y
      
      - name: Install jq
        run: apt-get install -y jq

      - name: COPY requirements.txt .
        run: COPY requirements.txt .

      - name: Install python requirements
        run: pip3 install --no-cache-dir -r requirements.txt

      - name: Install pyinstaller
        run: pip3 install pyinstaller

      - name: Build executable File
        run: pyinstaller --hidden-import="pg8000" --onefile app.py 

      - name: Set database credentials
        run: |
          touch codedeploy/app.env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> codedeploy/app.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> codedeploy/app.env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> codedeploy/app.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> codedeploy/app.env

      - name: Create Zip File
        run: zip -rj ./artifacts/python_explorations/app.zip codedeploy/* dist/app

      - name: S3 Sync
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          SOURCE_DIR: ./artifacts
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
